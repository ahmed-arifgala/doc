{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\NED University\\\\SemProject\\\\doc-next-door\\\\src\\\\containers\\\\DoctorList\\\\DoctorList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport IndivDoc from '../../components/IndivDoc/IndivDoc';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Context from '../../Context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [docInfo, setDocInfo] = useState({\n    'docId': 1,\n    'docImg': 'doc_111.png',\n    'name': 'Dr. Samra Sadaf',\n    'specialization': ['Dermatologist', 'Cosmetologist', 'Cardiologist', 'Neurologist', 'Urologist'],\n    'education': [{\n      degree: 'M.B.B.S',\n      uniName: 'Sharif Medical & Dental College',\n      countryName: 'Pakistan',\n      yearOfGrad: '2015'\n    }, {\n      degree: 'M.C.P.S (Dermatology)',\n      uniName: ' Gujranwala Medical College',\n      countryName: 'Pakistan',\n      yearOfGrad: '2021'\n    }],\n    'services': ['Acne Treatment', 'Alopecia', 'Antihistamine Treatment', 'Body Contouring', 'Boil'],\n    'conditionsTreated': ['Acne', 'Acne Scars', 'Eczema', 'Herpes', 'Moles'],\n    'surgeriesPerformed': [],\n    'professionalMemberships': ['Pakistan Medical Commission (PMC) '],\n    'languagesSpoken': ['Urdu', 'English', 'Pashto', 'Chinese'],\n    'experience': '5 Years',\n    'satisfiedPatients': .91,\n    'noOfReviews': 54,\n    'waitTime': 15\n  });\n  const [userReview, setUserReview] = useState({});\n  // const eduObjArr = Object.values(docInfo['education']);\n  // const eduStringArr = eduObjArr.map((eduObj) => {\n  //     return (\n  //         (Object.values(eduObj)).join(\", \")\n  //     );\n  // })\n\n  // const changeState = () => {\n  //     setDocInfo((prevDocInfo)=>(\n  //         {\n  //             ...prevDocInfo,\n  //             'education':eduStringArr\n  //         }\n  //        ));\n  // }    \n\n  // changeState();\n\n  useEffect(() => {\n    const eduObjArr = Object.values(docInfo.education);\n    const eduStringArr = eduObjArr.map(eduObj => Object.values(eduObj).join(\", \"));\n    setDocInfo(prevDocInfo => ({\n      ...prevDocInfo,\n      education: eduStringArr\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: docInfo,\n      children: /*#__PURE__*/_jsxDEV(IndivDoc, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorList, \"1VAdncMSR4VFSPEoglJf4JxHIKU=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","useEffect","IndivDoc","Aux","Context","jsxDEV","_jsxDEV","DoctorList","_s","docInfo","setDocInfo","degree","uniName","countryName","yearOfGrad","userReview","setUserReview","eduObjArr","Object","values","education","eduStringArr","map","eduObj","join","prevDocInfo","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Documents/NED University/SemProject/doc-next-door/src/containers/DoctorList/DoctorList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport IndivDoc from '../../components/IndivDoc/IndivDoc';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Context from '../../Context/Context';\r\n\r\n\r\nconst DoctorList = () => {\r\n\r\n    const [docInfo, setDocInfo] = useState(\r\n        {\r\n            'docId': 1,\r\n            'docImg': 'doc_111.png',\r\n            'name': 'Dr. Samra Sadaf',\r\n            'specialization': ['Dermatologist', 'Cosmetologist', 'Cardiologist', 'Neurologist', 'Urologist'],\r\n            'education': [{\r\n                degree: 'M.B.B.S',\r\n                uniName: 'Sharif Medical & Dental College',\r\n                countryName: 'Pakistan',\r\n                yearOfGrad: '2015'\r\n            },\r\n            {\r\n                degree: 'M.C.P.S (Dermatology)',\r\n                uniName: ' Gujranwala Medical College',\r\n                countryName: 'Pakistan',\r\n                yearOfGrad: '2021'\r\n            }\r\n            ],\r\n            'services': ['Acne Treatment', 'Alopecia', 'Antihistamine Treatment', 'Body Contouring', 'Boil'],\r\n            'conditionsTreated': ['Acne', 'Acne Scars', 'Eczema', 'Herpes', 'Moles'],\r\n            'surgeriesPerformed': [],\r\n            'professionalMemberships': ['Pakistan Medical Commission (PMC) '],\r\n            'languagesSpoken': ['Urdu', 'English', 'Pashto', 'Chinese'],\r\n            'experience': '5 Years',\r\n            'satisfiedPatients': .91,\r\n            'noOfReviews': 54,\r\n            'waitTime': 15\r\n        }\r\n    );\r\n\r\n    const [userReview, setUserReview] = useState(\r\n        {\r\n        \r\n        }\r\n    )\r\n    // const eduObjArr = Object.values(docInfo['education']);\r\n    // const eduStringArr = eduObjArr.map((eduObj) => {\r\n    //     return (\r\n    //         (Object.values(eduObj)).join(\", \")\r\n    //     );\r\n    // })\r\n\r\n    // const changeState = () => {\r\n    //     setDocInfo((prevDocInfo)=>(\r\n    //         {\r\n    //             ...prevDocInfo,\r\n    //             'education':eduStringArr\r\n    //         }\r\n    //        ));\r\n    // }    \r\n    \r\n    // changeState();\r\n\r\n    \r\n    useEffect(() => {\r\n        const eduObjArr = Object.values(docInfo.education);\r\n        const eduStringArr = eduObjArr.map((eduObj) => Object.values(eduObj).join(\", \"));\r\n\r\n        setDocInfo((prevDocInfo) => ({\r\n        ...prevDocInfo,\r\n        education: eduStringArr\r\n        }));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        \r\n        <Aux>\r\n            <Context.Provider value={docInfo}>\r\n                {/* <IndivDoc docInfo={docInfo}/> */}\r\n                <IndivDoc />\r\n            </Context.Provider>\r\n\r\n\r\n        </Aux>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default DoctorList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,GAAG,MAAM,+BAA+B;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAClC;IACI,OAAO,EAAE,CAAC;IACV,QAAQ,EAAE,aAAa;IACvB,MAAM,EAAE,iBAAiB;IACzB,gBAAgB,EAAE,CAAC,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,EAAE,WAAW,CAAC;IAChG,WAAW,EAAE,CAAC;MACVW,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,iCAAiC;MAC1CC,WAAW,EAAE,UAAU;MACvBC,UAAU,EAAE;IAChB,CAAC,EACD;MACIH,MAAM,EAAE,uBAAuB;MAC/BC,OAAO,EAAE,6BAA6B;MACtCC,WAAW,EAAE,UAAU;MACvBC,UAAU,EAAE;IAChB,CAAC,CACA;IACD,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,MAAM,CAAC;IAChG,mBAAmB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC;IACxE,oBAAoB,EAAE,EAAE;IACxB,yBAAyB,EAAE,CAAC,oCAAoC,CAAC;IACjE,iBAAiB,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC3D,YAAY,EAAE,SAAS;IACvB,mBAAmB,EAAE,GAAG;IACxB,aAAa,EAAE,EAAE;IACjB,UAAU,EAAE;EAChB,CACJ,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CACxC,CAEA,CACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGAC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACV,OAAO,CAACW,SAAS,CAAC;IAClD,MAAMC,YAAY,GAAGJ,SAAS,CAACK,GAAG,CAAEC,MAAM,IAAKL,MAAM,CAACC,MAAM,CAACI,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEhFd,UAAU,CAAEe,WAAW,KAAM;MAC7B,GAAGA,WAAW;MACdL,SAAS,EAAEC;IACX,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EAGN,oBAEIf,OAAA,CAACH,GAAG;IAAAuB,QAAA,eACApB,OAAA,CAACF,OAAO,CAACuB,QAAQ;MAACC,KAAK,EAAEnB,OAAQ;MAAAiB,QAAA,eAE7BpB,OAAA,CAACJ,QAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGlB,CAAC;AAId,CAAC;AAACxB,EAAA,CAjFID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAmFhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}